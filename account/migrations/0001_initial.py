# Generated by Django 2.2.7 on 2020-03-21 08:54

import account.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email_address')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('first_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='first_name')),
                ('last_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='last_name')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='self_intro')),
                ('image', models.ImageField(blank=True, null=True, upload_to='self_images/')),
                ('is_staff', models.BooleanField(default=False, help_text='管理者だけ管理者サイトにログインできます', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Activeとして扱われます', verbose_name='active')),
                ('data_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='data joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', account.models.CustomUserManager()),
            ],
        ),
    ]
